<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:jms="http://www.springframework.org/schema/jms"
	xmlns:amq="http://activemq.apache.org/schema/core" 
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://activemq.apache.org/schema/core 
		http://activemq.apache.org/schema/core/activemq-core.xsd
		http://www.springframework.org/schema/jms 
		http://www.springframework.org/schema/jms/spring-jms.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

	<!-- ActiveMQ 连接工厂 需要Xbean -->
	<!-- 真正可以产生Connection的ConnectionFactory，由对应的 JMS服务厂商提供 -->
	<!-- 如果连接网络：tcp://ip:61616；未连接网络：tcp://localhost:61616 以及用户名，密码 -->
	<amq:connectionFactory id="amqConnectionFactory"
		brokerURL="tcp://127.0.0.1:61616" userName="admin" password="admin" />
	<!-- Spring Caching连接工厂 -->
	<!-- Spring用于管理真正的ConnectionFactory的ConnectionFactory -->
	<bean id="connectionFactory"
		class="org.springframework.jms.connection.CachingConnectionFactory">
		<!-- 目标ConnectionFactory对应真实的可以产生JMS Connection的ConnectionFactory -->
		<property name="targetConnectionFactory" ref="amqConnectionFactory"></property>
		<!-- 同上，同理 -->
		<!-- <constructor-arg ref="amqConnectionFactory" /> -->
		<!-- Session缓存数量 -->
		<property name="sessionCacheSize" value="100" />
	</bean>


	<!-- JMS Queue Connection Factory -->  
    <bean id="transactionManager" class="org.springframework.jms.connection.JmsTransactionManager">  
        <property name="connectionFactory" ref="connectionFactory"/>  
    </bean>

    <!--<bean id="messageConverter" class="com.hikvision.coms.customization.converter.HxMessageConverter" /> -->

    <!--<bean id="messageListener" class="com.hikvision.coms.customization.listener.MessageListener" />-->

    <!--<jms:listener-container connection-factory="connectionFactory"
    	transaction-manager="transactionManager" message-converter="messageConverter" destination-type="topic">
    	<jms:listener destination="HISCP.HISENSE.DEVICE.FAULTINF" ref="messageListener" method="receviedMessage"/>
    </jms:listener-container>-->

	<!-- Spring JmsTemplate 的消息生产者 start -->
	<!-- 定义JmsTemplate的Queue类型 -->
	<bean id="jmsQueueTemplate" class="org.springframework.jms.core.JmsTemplate">
		<!-- 这个connectionFactory对应的是我们定义的Spring提供的那个ConnectionFactory对象 -->
		<constructor-arg ref="connectionFactory" />
		<!-- 非pub/sub模型（发布/订阅），即队列模式 -->
		<property name="pubSubDomain" value="false" />
	</bean>

	<!-- 定义JmsTemplate的Topic类型 -->
	<bean id="jmsTopicTemplate" class="org.springframework.jms.core.JmsTemplate">
		<!-- 这个connectionFactory对应的是我们定义的Spring提供的那个ConnectionFactory对象 -->
		<constructor-arg ref="connectionFactory" />
		<!-- pub/sub模型（发布/订阅） -->
		<property name="pubSubDomain" value="true" />
	</bean>
	<!--Spring JmsTemplate 的消息生产者 end -->

</beans>
